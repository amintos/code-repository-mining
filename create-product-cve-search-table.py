#!/usr/bin/env python3

import psycopg2
import config
import time

from pymongo import MongoClient
from cpe     import CPE

createTableStatement ="""
CREATE TABLE cve_per_product_version(
  cveid   VARCHAR(64),
  name    VARCHAR(256),
  version VARCHAR(64)
);
"""
insertStatement = "INSERT INTO cve_per_product_version VALUES(%s,%s,%s)"
dropTableStatement   = "DROP TABLE IF EXISTS cve_per_product_version;"

postgresConnection = psycopg2.connect(dbname=config.postgresql.dbname,
                                      user=config.postgresql.user,
                                      password=config.postgresql.password)
postgresCursor = postgresConnection.cursor()

postgresCursor.execute(dropTableStatement)
postgresCursor.execute(createTableStatement)
postgresConnection.commit()

# set up MongoDB connection
mongoclient = MongoClient(config.mongodb.host, config.mongodb.port)
mongoCves   = mongoclient['cvedb']['cves']

# extract relevant data from every cve in the mongodb
# and write it into the newly created postgres table
cvecount = 0
rowcount = 0
for cve in mongoCves.find():
  try:
    parsed_cpes = [ CPE(s) for s in cve["vulnerable_configuration_cpe_2_2"] ]
  except:
    print(cve["vulnerable_configuration_cpe_2_2"])
    continue

  for_insertion = [ (cve["id"], c.get_product()[0],c.get_version()[0]) for c in parsed_cpes ]

  cvecount += 1
  rowcount += len(for_insertion)

  for row in for_insertion:
    try:
      postgresCursor.execute(insertStatement, row)
    except:
      postgresConnection.commit()
      time.sleep(0.2)
      postgresCursor.execute(insertStatement, row)

print("Inserted ", cvecount, " CVEs and ", rowcount, " combinations thereof")

postgresConnection.commit()
postgresCursor.close()
postgresConnection.close()
